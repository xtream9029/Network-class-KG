## vi (Visual Editor) : 에디터(텍스트 편집기) ##

- 명령모드, 입력모드, 실행모드
  => 명령모드 : vi 입력 시 처음 보이는 화면. 다른 모드 간에 이동할 때 반드시 지나야 함.
	      엔터를 누를 필요 없이 바로 실행 됨. 커서 이동, 행 바꿈, 복사 붙여넣기 등.
  => 입력모드 : 문자 입력(하단에 --INSERT-- 표시가 나온다.)
  => 실행모드 : 저장, 열기, 새로 만들기 실행

<실습 준비>
mkdir /backup/
cp /etc/inittab /backup/
cp /etc/login.defs /backup/
cp /boot/grub2/grub.cfg /backup/

- 실습은 [vi /backup/grub.cfg]  
  
[1. 커서 이동]
- 명령모드에서 커서 이동 (불편하면 방향키 사용)
	h	왼쪽
	j	아래
	k	위
	l	오른쪽

- 단어 단위 이동
 w, W : 다음 단어의 처음 (forward)
 b, B : 이전 단어의 처음 (backward)
 e, E : 다음 단어의 마지막

- 행에서 home, end 기능
 0 : 행의 처음으로 이동 ---> Windows에 Home Key와 같은 기능	
 $ : 행의 마지막으로 이동 ---> Windows에 End Key와 같은 기능

- 문서단위
 gg : 문서의 처음으로 이동
 G : 문서의 마지막으로 이동 

- 창(화면)크기 기준
 H (High)   : 화면에 표시되어있는 내용 맨처음으로 이동
 M (Middle) : 화면에 표시되어있는 내용 중간으로 이동
 L (Low)    : 화면에 표시되어있는 내용 맨마지막으로 이동
  * 화면에 표시되어있다라는 말은 Putty창에 보이는 만큼만을 말한다.

 u : 되돌리기 ---> Windows에 ctrl+z 와 같은 기능, ESC로 명령 모드 이동후 사용.

- 삭제 기능
 x : 현재 커서에 있는 글자를 삭제 (Delete키 기능)
 X : 현재 커서 이전에 있는 글자를 삭제 (Backspace키 기능)
 dd : 한 줄 삭제
 숫자+dd : 여러 줄을 삭제(현재 커서에서부터 숫자입력한 줄까지)
 D : 커서가 있는 위치로부터 그 행의 마지막까지 내용 삭제 

- 복사 붙여넣기 기능
 yy : 한 줄 복사
 숫자+yy : 여러줄을 복사
 p : 현재 커서 아래에 붙여넣기
 P : 현재 커서 위에 붙여넣기

u : 되돌리기

[2. 명령모드 -> 입력모드 전환] 

- 텍스트 입력
 i(insert) : 현재 커서 왼쪽에 입력, 하단에 --INSERT--가 생김
 I         : 행의 처음으로 이동 후 입력, 하단에 --INSERT--가 생김
 
 a(append) : 커서가 우측으로 한 칸 이동한 후 그 위치에 입력, 하단에 --INSERT-- 생김
 A         : 행의 마지막으로 이동 후 입력, 하단에 --INSERT--가 생김

 o         : 현재 커서 아래에 빈 줄 생성, 하단에 --INSERT-- 생김
 O         : 현재 커서 위에 빈 줄 생성, 하단에 --INSERT-- 생김

 s         : 커서에 있는 내용을 삭제 후 글자 입력, 하단에 --INSERT-- 생김 
 S         : 커서가 있는 행의 내용을 삭제 후 글자 입력, 하단에 --INSERT-- 생김

 r	   : 커서에 있는 한 글자만 수정, "r + [입력하고자 하는 글자]" (insert가 뜨지 않는다.)
 R 	   : Insert 기능처럼 해당 글자부터 쓰는 글자로 바뀐다. 하단에 --REPLACE-- 생김
              backspace를 누르면 다시 원래 글자가 나온다


[3. 명령모드에서 실행모드로 전환 [ :, / , ? ]]
 - :(콜론) 가장 많이 사용되며, 명령어 및 각종 실행모드의 기능을사용할때 무조건 :(콜론)을 먼저입력 후 작업을 시작
 - /(위에서 아래) , ?(아래에서 위) 문서에서 특정단어를 검색을 할때 사용된다.
   검색결과의 다음 위치로 이동을 하고싶을때는 n을 눌러서 이동.

1) 치환 [ 찾아서 바꾼다 ] : 문서상의 특정단어를 찾아 새로운 단어로 변환 
 - 사용형식
   :[행번호]s/[old word]/[new word] => 해당 행의 old word를 new word로 치환.
				     행번호 입력하는 곳에 , 로 여러 행 지정 가능.
				     %를 입력하면 문서 전체    
    <Ex>
    :5s/grub/shell	          => 5행의 grub을 shell로 치환 (맨처음 grub만 변경)
    :4,5s/grub/shell/g            => 3번째줄, 4번째줄의 boot를 grub로 변경한다.
	- g 옵션은 전부를의미하며 해당라인의 모든 boot를 찾아 변환 
	- g 옵션을 사용하지 않을 경우에는 맨처음 boot단어만 변환시킨다.
    :%s/you/I/g                   => 문서전체에서 you를 찾아 I로 변환

2) 편집기 중단 후 명령어 입력
 :!   => vi 편집기를 잠시 중단하고 명령어를 수행. (cd 명령어만 사용하는 것은 불가능)
         vi 밖으로 나와서 결과 출력 후 다시 vi로 돌아온다.
         <Ex> :!ls -l
 :.!  =>  명령어 결과값을 커서가 있는 라인에 삽입. (vi 안에 명령어 결과 출력)	
          .!를 사용할 경우 반드시 빈줄을 생성 후 빈줄에 커서를 두고 사용 할 것.
          만약 빈 줄을 생성하지 않을 경우 커서가 위치한 해당 라인이 삭제가 된다.
          <Ex> :.!ls -l

3) 파일 저장 및 종료 
 :f 현재파일의 정보 확인 
 :set nu 줄번호 활성화 
 :set nonu 줄번호 비활성화
 :[n] 해당 라인으로 이동 

 :[n]r [filename] 해당라인 밑에 지정한 파일내용 삽입
 :[n]r! [명령어] 해당라인 밑에 수행한 명령어 결과 값을 삽입

 :q 종료 , :q! 강제종료 , :w 저장 , :wq 저장 후 종료 
 :w [저장할 위치 및 저장할 이름] 다른이름으로 저장
 :wq! 강제 저장 후 종료 , :e 불러오기 , :enew 새로만들기

4) 기타
 :[숫자]r [파일명]		현재 문서의 [숫자]다음 행에 지정한 파일의 내용 삽입.(Ex> :10r /backup/inittab)
 :[숫자]r! [명령어]	현재 문서의 [숫자]다음 행에 명령어 수행 결과 삽입.(Ex> :10r! ls -l) 
 :e [filename] 		불러오기(열기)
 :e! [filename]		강제로 문서 열기
 :enew			새로 만들기(빈 문서 열기)

-----------------------------------------------------------------------------------------------
<실습 1>
[대상파일 : /bakcup/inittab], [작업위치 : /home/itbank/]

조건: vi /backup/inittab 후 절대로 vi화면을 종료하지 않고 작업을 진행합니다.

1. 17번째 라인 밑에 /home/itbank/ 디렉터리 목록을 자세히 출력하세요. ( ls -l )	
   - /home/itbank 디렉터리 목록에 a , b , c , d , e 파일만 보여야 한다. 
     (불필요하거나 없는것들은 명령어를 이용해서 작업)

2. 문서상에 있는 단어 변경 : 'target을 bank로 변경' , 'run을 it로 변경' ( 치환 )

3. 5 ~ 12번째 라인을 2번째 라인 밑에 복사  

4. 작업한 내용을 /test/sam.test ,/home/.sam.test ,/backup/it 파일로 총 3번 저장

* 확인하기
/test -> sam.test 파일이 존재
/home -> .sam.test 파일이 존재
/backup/madal -> it 파일이 존재

---------------------------------------------------------------------------------------------------
<실습 2> 
- FTP를 이용하여 named로 시작하는 파일 2개를 Linux Server로 업로드
  최상위 디렉터리 하위에 "samtest" 빈 파일 생성 후 vi 편집기를 이용하여 문서 열기.
  업로드한 파일 2개를 /sam/ 디렉터리 하위에 절대경로:named.1 상대경로:named.2 이름으로 병합
  병합된 파일을 현재 열려있는 samtest 파일의 내용으로 삽입.
 
------------------------------------------------------------------------------------------------------------
<실습 3>

[사전작업]
mkdir -p /test/itbank -> /test/itbank 디렉터리 생성 ( -p 옵션 상위경로까지 같이 생성 )
cd /test/itbank -> 경로 변경
cp /etc/login.defs /test/itbank/login.defs -> login.defs파일을 /test/itbank 디렉터리에 복사

[문제]
실습 할 파일 : /test/itbank/login.defs
* 조건 : 절대로 vi 에서 나오시지 않고 vi 안에서 모든 작업진행
 
1번) /test/itbank/ 디렉터리 하위에 파일 A , B , C 생성 [ vi 편집기 안에서 생성 할 것 ] 	

2번) 치환 작업(문서전체) : 'PASS(word)', 'number(PASS)'

3번) 5 ~ 12번째 라인을 2번째 라인 밑에 복사

4번) 14번째 라인으로 이동 후 ls -l /var/log/의 명령어 결과값을 문서내용으로 삽입

5번) 편집한 내용을 저장 [ 종료는 하지 않음 ]
		
6번) 현재 열려있는 파일의 내용을 비어있는 /test/B 파일에 입력 후 B파일을 열어 내용입력이 되었는지 확인

7번) 현재 열려있는 B파일의 내용을 수정 [ 치환 작업 X ] UID 단어를 찾아 UID를 수동으로 지운 후 Xwindow라는 
     내용으로 변경 후 저장, 또한 /backup 디렉터리에 END라는 파일이름으로 추가 저장

8번) 현재 Vi 화면에서 새로운 문서를 불러온 후 내용 "안녕하세요!"를 입력 후 /backup/END를 파일을 불러오기 할 것 
     단, 현재 새로만들기를 이용하여 불러온 문서는 별도로 저장하지 않는다.

