[pwd] : print working directory
 => 현재 작업 중인 디렉터리 경로를 확인.

[cd] : change directory
 => 경로를 변경할 수 있는 명령어.
 => 사용 형식 : cd [경로]
 => 상대 경로 : .. (상위 디렉터리를 의미)
               . (현재 디렉터리를 의미)

[ls] : list
 => 특정 디렉터리의 내용을 출력하는 명령어.
 => 사용 형식 : ls [경로]
    옵션 사용 : ls [옵션] [경로]
      -l    : 자세한 정보 출력
      -a    : 모든 파일 보기(숨김파일(.)도 표시)
      -t    : 파일 수정 시간 순서로 출력
      -h    : 파일 크기를 사람이 인식하기 편한 형태로 표시
      -r    : 파일 출력결과를 역순으로 확인
      -R    : 하위 경로의 정보까지 모두 출력

=========================================================================================
** Linux 주요 디렉터리 정리 **

1.  /     => 루트 디렉터리. 모든 파일과 디렉터리의 시작점.
2.  /bin  => 모든 사용자가 사용할 수 있는 명령어(바이너리 실행파일)가 들어있다.
3.  /sbin => 시스템 관리자가 사용할 수 있는 명령어(바이너리 실행파일)가 들어있다.
4.  /boot => 리눅스 부팅과정에 필요한 파일들과 커널이 들어있다.
5.  /etc  => 시스템이나 사용자를 위한 '환경설정 파일'과 서비스들을 위한 '스크립트'가
             들어있다.
6.  /root => 관리자의 홈 디렉터리.
7.  /home => 관리자 이외의 사용자 홈 디렉터리가 들어있다.
8.  /dev  => 장치 파일이 들어있는 디렉터리.
9.  /proc => 프로세스에 관련된 파일이 들어있는 디렉터리.
10. /lib  => 각종 언어를 위한 라이브러리 파일들이 있는 디렉터리.
11. /opt  => 추가적인 소프트웨어를 설치할 때 사용. (주로 상업용 소프트웨어)
12. /var  => log와 같이 변경될 수 있는 파일들이 저장되는 디렉터리.
13. /tmp  => 임시파일들이 저장되는 디렉터리.
    ...

==========================================================================================
[mkdir] : make directory
 => 디렉터리 생성 명령어.
 => [-p] 옵션을 사용하면 상위 디렉터리도 같이 생성한다.

<예제>
cd /home/itbank/
mkdir ./a/
mkdir ./a/b/
mkdir ./a/b/c/
ls -ld ./a/b/c/

mkdir ./a/b/c/d/e/      => 부모 경로가 없기 때문에 생성 X.
mkdir -p ./a/b/c/d/e/
ls -ld ./a/b/c/d/e/

mkdir ./test1/ ./test2/ => 동시에 다수의 디렉터리를 생성할 수 있다.
 
----------------------------------------------------------------------------------------
[rmdir] : remove directory
 => 디렉터리를 삭제하는 명령어.
 => 디렉터리 하위에 파일이나 디렉터리가 없어야 삭제 가능.
 => [-p] 옵션을 사용하면 상위 디렉터리도 삭제가 가능.

rmdir ./test1/ ./test2/

rmdir ./a/b/c/d/e/    => 가장 마지막 디렉터리만 삭제된다.
ls -ld ./a/b/c/d/e/
ls -ld ./a/b/c/d/

rmdir -p a/b/c/d/    => 상위 디렉터리까지 모두 삭제.
ls -l

----------------------------------------------------------------------------------------
[touch] 
 => 빈 파일을 생성하거나, 이미 존재하는 파일의 경우 작업 시간을 변경.
 => [touch] 명령어로 파일 생성 후 시간을 확인해보고, 다시 [touch] 명령어를 사용하여
    시간이 변경되는 것을 확인해보자.

----------------------------------------------------------------------------------------
[cp] : copy
 => 파일이나 디렉터리를 복사할 수 있는 명령어.
 => cp [option] [복사 대상] [붙여넣기 경로]

1. 원본파일명과 동일한 이름으로 복사하는 경우에는 파일명을 생략해도 된다.

mkdir /backup/
cp /etc/inittab /backup/
cp /etc/login.defs /backup/
cp /boot/grub2/grub.cfg /backup/

<실습 1: /backup/ 경로 안에 있는 파일들을 /home/itbank/ 경로로 복사>
 1) grub.cfg는 절대 경로            : cp /backup/grub.cfg /home/itbank/grub.cfg
 2) inittab은 상대 경로             : cp /backup/inittab ./
 3) loin.def은 login 파일명으로 변경 : cp /backup/login.defs ./login

<실습 2: /home/itbank/안에 있는 다음 파일들을 /home/test/c/ 디렉터리로 복사> 	
			 cd /home/
			 rm -r test/c/d/
			 mkdir -p /home/test/c/
			 ls -ld /home/test/c/
			 cd /home/itbank/
		                
 1) grub.cfg는 상대 절대	        : cp ./grub.cfg /home/test/c/grub.cfg	 
 2) inittab은 절대 상대	        : cp /home/itbank/inittab ../test/c/	 
 3) login은 상대 상대 login.defs로	: cp ./login ../test/c/login.defs

<실습 3: /backup/안에 있는 파일들을 /home/test/c/d/ 디렉터리로 복사>]
			          mkdir /home/test/c/d/
 1) grub.cfg는 절대 절대           : cp /backup/grub.cfg /home/test/c/d/grub.cfg	
 2) inittab 상대 절대             : cp ../../backup/inittab /home/test/c/d/		
 3) login.defs은 상대 상대 login로 : cp ../../backup/login.defs ../test/c/d/login

- 주의 사항 -
1. 작업위치는 /home/itbank/
2. 작업 후 ls -l 명령어로 확인
3. 오타 주의

Ex 1> /home/test/c/d/ 안에 있는 모든 파일들은 /home/itbank/a/b/ 디렉터리에 한 줄로 복사하시오.
 mkdir -p /home/itbank/a/b/
 cp /home/test/c/d/grub.cfg /home/test/c/d/inittab /home/test/c/d/login ./a/b/
 ls -l ./a/b/

Ex 2> 와일드 카드 "*"를 사용하여 위의 작업을 다시 수행해보자.
 rm /home/itbank/a/b/grub.cfg /home/itbank/a/b/inittab /home/itbank/a/b/login
 ls -l ./a/b/
 cp /home/test/c/d/* ./a/b/

Ex 3> 와일드 카드를 사용한 Copy 연습. (/home/itbank/a/b/ ==> /home/test/)
 ls -l /home/test/
 cp ./a/b/l*n /home/test/

 ls -l /home/test/
 cp ./a/b/gru?.cfg /home/test/

 ls -l /home/test/
 cp ./a/b/[iI1]nittab /home/test/

Ex 4> 디렉터리 복사
cp /backup/ ./
cp: omitting directory `/backup/' => 디렉터리는 그냥 복사가 안된다!

cp -r /backup/ ./

-----------------------------------------------------------------------------------------
[mv] : move
 => 파일이나 디렉터리를 이동시키는 경우 사용. (혹은 이름 변경)
 => mv [-option] [이동시킬 파일/디렉터리] [이동할 목적지]
 => 디렉터리를 이동시키는 경우 cp와 다르게 [-r] 옵션이 필요없다!
 => 원본을 이동시키기 때문에 사용시 주의해야 한다!

<Ex1>
/backup/ 디렉터리에 있는 파일들을 /home/itbank/a/ 디렉터리로 이동시키자.
 mv /backup/inittab /home/itbank/a/
 mv ../../backup/grub.cfg ./a/
 mv /backup/login.defs ./a/login

<Ex2>
/home/itbank/a/로 이동시킨 3개의 파일을 다시 /backup/ 디렉터리로 이동시키자.(한줄)
그 후 login 파일명을 login.defs로 변경하시오. (mv는 이름 변경하는 경우에도 사용)
 mv ./a/grub.cfg ./a/login ./a/inittab /backup/
 mv /backup/login /backup/login.defs

<EX3> 
/backup/에 있는 모든 파일을 /home/itbank/a/ 디렉터리로 이동 후 /backup/ 디렉터리도
/home/itbank/a/로 이동시키자.

 mv /backup/* ./a/
 mv /backup/ ./a/   => [cp]와 다르게 [-r] 옵션이 필요가 없다!

 ls -l ./a/

-----------------------------------------------------------------------------------------
[rm] : remove
 => 파일이나 디렉터리를 삭제하는 명령어.
 => [rm] 명령어는 기본적으로 [-i] 옵션과 묶여있다. (삭제 여부를 확인한다.)
 => [-f] 옵션을 사용할 경우 삭제 여부를 확인하지 않는다. (주의해서 사용해야 한다!)
 => 디렉터리를 삭제하는 경우 [-r] 옵션을 사용해야 한다!

<Ex1>
/home/test/c/d/ 디렉터리 안에 있는 파일들을 하나씩 삭제해보자.
(삭제 여부 확인시 그냥 엔터는 'no'를 의미한다.)
  rm /home/test/c/d/grub.cfg
  y
  rm /home/test/c/d/login
  y
  rm -f /home/test/c/d/inittab   => [-f] 옵션, 삭제 여부 확인 X.
  ls -l /home/test/c/d/

<Ex2>
[rm] 명령어를 사용하여 /home/test/c/ 디렉터리를 삭제해보자.
  rm -rf /home/test/c/           => [-rf] 옵션을 같이 사용하는 경우 주의해야 한다!

-----------------------------------------------------------------------------------------
실습 1> 
0) 선행작업 : mkdir -p /home/test/c/d/
1) /home/itbank/a/backup/디렉터리에 /home/itbank/a/ 밑에 있는 3개의 파일을 이동.
   (grub.cfg, inittab, login.defs)
2) /home/itbank/a/backup/디렉터리를 / 밑으로 이동.
3) /backup/ 안에 linux/라는 디렉터리를 만든 후 /home/test/c/d/ 디렉터리 안에 복사.
4) /backup/ 디렉터리를 /home/test/c/로 이동.

 mkdir -p /home/test/c/d/
 mv ./a/grub.cfg ./a/inittab ./a/login.defs ./a/backup/
 mv ./a/backup/ /
 mkdir /backup/linux/
 cp -r /backup/linux/ ../test/c/d
 mv /backup/ ../test/c/

<실습 2>
/home/itbank/ 안에 있는 파일들을 삭제 여부 확인하면서 삭제하기.(디렉터리 삭제 X)
 [root@localhost itbank]# rm grub.cfg inittab login
 rm: remove 일반 파일 `grub.cfg'? y
 rm: remove 일반 파일 `inittab'? y
 rm: remove 일반 파일 `login'? y
 [root@localhost itbank]# 
 [root@localhost itbank]# ls -l /home/itbank/
 합계 0
 drwxr-xr-x. 3 root root 15  7월 22 14:54 a
 drwxr-xr-x. 2 root root 55  7월 22 13:14 backup

<실습3>
/home/itbank/backup/ 안에 있는 파일들을 삭제 여부 확인 없이 삭제.
 [root@localhost itbank]# rm -f ./backup/*
 [root@localhost itbank]# ls -l /home/itbank/backup/
 합계 0

<실습4>
/home/test/c/ 디렉터리 삭제.(안에 있는 모든 파일들 포함)
 [root@localhost itbank]# rm -rf ../test/c/
 [root@localhost itbank]# ls -ld /home/test/c/
 ls: cannot access /home/test/c/: 그런 파일이나 디렉터리가 없습니다


---------------------------------------------------------------------------------
[alias]
 =>별칭을 사용하여 작업의 효율성을 높이는 것이 가능하다.
 =>[alias] 명령어 사용하면 등록된 별칭들을 확인할 수 있다.
 =>별칭은 쉘 세션이 종료되면 사라진다.지속적으로 사용하기 위해서는 로그인시 사용되는 
   환경 스크립트를 변경해야 한다.
 =>일반적으로 사용되고 있는 명령어를 별칭으로 사용해서는 안된다.

<Ex>
alias altest='cd /usr; ls; cd ~'
alias 1=clear

 =>alias 설정을 해제하는 명령어는 [unalias]이다.

<Ex>
alias 1=clear
type 1         =>alias 확인

unalias 1      =>해제
type 1         =>확인



----------------------------------------------------------------------------------
##Remote Access(원격 접근)##

-실제 운영중인 서버는 직접 접근해서 설정을 하는 것보다 원격으로 접근하는 경우가 일반적이다.  
 원격 접근을 하기 위해서는 다음과 같은 내용이 선행되어야 한다.
  1)Network 도달성(Client PC <---> Server)
  2)원격 접근 서비스(Telnet/SSH...) 설치 및 접근 허용.(telnet은 보안상 취약)


##리눅스에서 프로그램(패키지) 설치 ##
-초창기에는 리눅스에서는 프로그램을 설치하는 것이 어려웠다.이 문제를 해결하고자 'Redhat'사에서
 windows의 [setup.exe] 파일과 유사한 설치 파일을 만들었다.
 이러한 파일의 확장자는 [~.rpm(redhat package manager)]이고,이를 패키지라고 부른다. 














